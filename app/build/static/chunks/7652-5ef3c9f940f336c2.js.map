{"version":3,"file":"static/chunks/7652-5ef3c9f940f336c2.js","mappings":"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","sources":["webpack://_N_E/./components/sync-with-moonraker.tsx","webpack://_N_E/./data/drivers.ts","webpack://_N_E/./components/ui/typography.tsx","webpack://_N_E/./data/fans.tsx","webpack://_N_E/./data/nozzles.ts","webpack://_N_E/./data/steppers.ts","webpack://_N_E/./helpers/toolhead.ts","webpack://_N_E/./helpers/utils.ts","webpack://_N_E/./hooks/usePrinterConfiguration.tsx","webpack://_N_E/./recoil/printer.ts","webpack://_N_E/./recoil/toolhead.ts","webpack://_N_E/./utils/serialization.ts","webpack://_N_E/./zods/boards.tsx","webpack://_N_E/./zods/hardware.tsx","webpack://_N_E/./zods/motion.tsx","webpack://_N_E/./zods/printer-configuration.tsx","webpack://_N_E/./zods/printer.tsx","webpack://_N_E/./zods/toolhead.tsx","webpack://_N_E/./env/schema.mjs","webpack://_N_E/<anon>"],"sourcesContent":["'use client';\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useMoonraker } from '@/moonraker/hooks';\nimport { ReadItem, RecoilSync } from 'recoil-sync';\nimport { AtomEffect, DefaultValue } from 'recoil';\nimport { getLogger } from '@/app/_helpers/logger';\n\nconst moonrakerSyncEventEmitter = new EventTarget();\n\nexport const DispatchSaveAtomEvent = (itemKey: string, value: unknown) => {\n\tmoonrakerSyncEventEmitter.dispatchEvent(\n\t\tnew CustomEvent('saveAtom', {\n\t\t\tdetail: {\n\t\t\t\titemKey,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}) satisfies SaveAtomEvent,\n\t);\n};\n\nexport const moonrakerWriteEffect = <T extends any = unknown>(): AtomEffect<T> => {\n\treturn (params) => {\n\t\tparams.onSet((newValue) => {\n\t\t\t// getLogger().debug(\n\t\t\t// \t{\n\t\t\t// \t\tkey: params.node.key,\n\t\t\t// \t\tvalue: newValue,\n\t\t\t// \t},\n\t\t\t// \t`RatOS Atom Sync Effect: new value was saved to moonraker \"${params.trigger}\"`,\n\t\t\t// );\n\t\t\tDispatchSaveAtomEvent(params.node.key, newValue == null ? 'null' : newValue); // Moonraker doesn't save null values..\n\t\t});\n\t};\n};\n\ntype SaveAtomEvent = CustomEvent<{ itemKey: string; value: unknown }>;\n\nexport const SyncWithMoonraker: React.FC<React.PropsWithChildren> = ({ children }) => {\n\tconst moonraker = useMoonraker();\n\tconst read: ReadItem = useCallback(\n\t\tasync (itemKey) => {\n\t\t\tconst value = await moonraker.getItem('RatOS', itemKey as '__recoil');\n\t\t\treturn value != null && value != 'null' ? value : new DefaultValue();\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tconst saveAtom = useCallback(\n\t\tasync (event: Event) => {\n\t\t\tconst { itemKey, value } = (event as SaveAtomEvent).detail;\n\t\t\tawait moonraker.saveItem('RatOS', itemKey as '__recoil', value);\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tuseEffect(() => {\n\t\tmoonrakerSyncEventEmitter.addEventListener('saveAtom', saveAtom);\n\t\treturn () => {\n\t\t\tmoonrakerSyncEventEmitter.removeEventListener('saveAtom', saveAtom);\n\t\t};\n\t}, [saveAtom]);\n\treturn <RecoilSync read={read}>{children}</RecoilSync>;\n};\n","import { z } from 'zod';\nimport { Driver } from '@/zods/motion';\n\nexport const Drivers = z.array(Driver).parse([\n\t{\n\t\tid: 'LDO-TMC2209',\n\t\ttitle: 'LDO TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'LDO-NITEHAWK-TMC2209',\n\t\ttitle: 'LDO TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.1,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'LDO-TMC5160-HV',\n\t\ttitle: 'LDO TMC5160 HV',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 3,\n\t\tcoolingCurrentThreshold: 1.5,\n\t},\n\t{\n\t\tid: 'BTT-KRAKEN-2160-PLUS',\n\t\ttitle: 'BTT TMC2160 PLUS',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.022,\n\t\tvoltages: [24, 36, 48, 56, 60],\n\t\tmaxCurrent: 8,\n\t\tcoolingCurrentThreshold: 3,\n\t},\n\t{\n\t\tid: 'BTT-KRAKEN-2160',\n\t\ttitle: 'BTT TMC2160',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tvoltages: [24, 36, 48, 56, 60],\n\t\tmaxCurrent: 3,\n\t\tcoolingCurrentThreshold: 1.5,\n\t},\n\t{\n\t\tid: 'BTT-TMC2209-13',\n\t\ttitle: 'BTT TMC2209 v1.3',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2226-10',\n\t\ttitle: 'BTT TMC2226 v1.0',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160-PRO-11',\n\t\ttitle: 'BTT TMC5160(T) Pro v1.1',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tvoltages: [24, 36, 48, 56],\n\t\tmaxCurrent: 3,\n\t\tcoolingCurrentThreshold: 1.5,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160T-PLUS-10',\n\t\ttitle: 'BTT TMC5160T Plus v1.0',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.022,\n\t\tvoltages: [24, 36, 48, 56, 60],\n\t\tmaxCurrent: 10.6,\n\t\tcoolingCurrentThreshold: 3,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'BTT-EZ2209',\n\t\ttitle: 'BTT EZ2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2226',\n\t\ttitle: 'BTT EZ2226',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2130',\n\t\ttitle: 'BTT EZ2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-PRO',\n\t\ttitle: 'BTT EZ5160 Pro',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tcoolingCurrentThreshold: 1.6,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 2.5,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-RGB',\n\t\ttitle: 'BTT EZ5160 RGB',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.05,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 48, 36, 56],\n\t\tmaxCurrent: 4.7,\n\t},\n\t{\n\t\tid: 'BTT-TMC2240-10',\n\t\ttitle: 'BTT TMC2240 v1.0',\n\t\ttype: 'TMC2240',\n\t\tprotocol: 'SPI',\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24, 36],\n\t\tmaxCurrent: 2.1,\n\t},\n\t{\n\t\tid: 'LDO-2240-UART',\n\t\ttitle: 'LDO TMC2240 UART',\n\t\ttype: 'TMC2240',\n\t\tprotocol: 'UART',\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24, 36],\n\t\tmaxCurrent: 2.1,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-HV-TMC5160-PRO-12',\n\t\ttitle: 'Mellow FLY HV TMC5160 Pro v1.2',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.033,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 4.25,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-TMC2209',\n\t\ttitle: 'Mellow FLY TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-EINSY-RAMBO-TMC2130',\n\t\ttitle: 'Prusa Einsy Rambo TMC2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.22,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-BUDDY-TMC2209',\n\t\ttitle: 'Prusa Buddy TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n] satisfies z.input<typeof Driver>[]);\n","import { cn, setDisplayName } from '@/helpers/utils';\nimport React from 'react';\n\nexport const Strong = React.forwardRef<HTMLElement, JSX.IntrinsicElements['strong']>(({ className, ...props }, ref) => (\n\t<strong ref={ref} className={cn('font-semibold', className)} {...props} />\n));\nsetDisplayName(Strong, 'Strong');\n","import { z } from 'zod';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport type { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport type { PartialToolheadConfiguration } from '@/zods/toolhead';\nimport { Strong } from '@/components/ui/typography';\nimport React from 'react';\n\nexport const fanHelp = (\n\t<>\n\t\t<p>\n\t\t\t<Strong className=\"dark:text-sky-300/70\">Input Voltage PWM</Strong> is used on fans that have no dedicated pwm pin\n\t\t\t(2 and 3-pin fans).\n\t\t</p>\n\t\t<p>\n\t\t\t<Strong className=\"dark:text-sky-300/70\">Digital PWM</Strong> is used for fans that have a dedicated PWM signal\n\t\t\twire (requires a 4-pin fan).\n\t\t</p>\n\t</>\n);\n\nexport const partFanOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x || toolheadConfig?.axis === null) {\n\t\tfans.push({\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 0) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config.controlboard.name }],\n\t\t});\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({\n\t\t\tid: '2pin-toolboard' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin-toolboard' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 0\n\t\t) {\n\t\t\tfans.push({\n\t\t\t\tid: '4pin-dedicated-toolboard' as const,\n\t\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\t\tbadge: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const hotendFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x) {\n\t\tfans.push({\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\tconfig.controllerFan?.id !== '4pin-dedicated')\n\t) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({\n\t\t\tid: '2pin-toolboard' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin-toolboard' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 1\n\t\t) {\n\t\t\tfans.push({\n\t\t\t\tid: '4pin-dedicated-toolboard' as const,\n\t\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\t\tbadge: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const controllerFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfigs?: PartialToolheadConfiguration[] | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [\n\t\t{\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t},\n\t\t{\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t},\n\t];\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\t!toolheadConfigs?.some((th) => th?.hotendFan?.id === '4pin-dedicated'))\n\t) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tfans.push({ id: 'none', title: 'No fan' });\n\treturn fans;\n};\n\nexport const defaultControllerFan = {\n\tid: '2pin' as const,\n\ttitle: 'Input Voltage PWM',\n\tbadge: [{ color: 'purple' as const, children: 'Control Board' }],\n};\n","import { z } from 'zod';\nimport { Nozzle } from '@/zods/hardware';\n\nexport const getDefaultNozzle = () => {\n\treturn { diameter: 0.4, type: 'Regular' } satisfies z.infer<typeof Nozzle>;\n};\n","import { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport { Stepper, StepperVoltage } from '@/zods/motion';\n\nexport const findPreset = (\n\tstepper: (typeof Steppers)[number],\n\tdriver: (typeof Drivers)[number],\n\tvoltage: StepperVoltage,\n\tcurrent?: number,\n\tperformanceMode?: boolean | null,\n) => {\n\treturn stepper.presets\n\t\t?.slice()\n\t\t.sort((a, b) => (performanceMode ? b.run_current - a.run_current : a.run_current - b.run_current))\n\t\t.find(\n\t\t\t(p) =>\n\t\t\t\tp.driver === driver.type &&\n\t\t\t\tp.voltage === voltage &&\n\t\t\t\t(driver.type === 'TMC2240' || ('sense_resistor' in p && p.sense_resistor === driver.senseResistor)) &&\n\t\t\t\t(current == null || p.run_current === current),\n\t\t);\n};\n\nexport const Steppers = z.array(Stepper).parse([\n\t{\n\t\tid: 'generic',\n\t\ttitle: 'Generic Stepper',\n\t\tmaxPeakCurrent: 2.8,\n\t},\n\t{\n\t\tid: 'BONDTECH-42H025H-0704-002',\n\t\ttitle: 'Bondtech LGX Stepper',\n\t\tmaxPeakCurrent: 0.7,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2504AC',\n\t\ttitle: 'LDO-42STH48-2504AC',\n\t\tmaxPeakCurrent: 2.5,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 1.1,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.768,\n\t\t\t\tvoltage: 48,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 4,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH40-1684AC',\n\t\ttitle: 'LDO-42STH40-1684AC',\n\t\tmaxPeakCurrent: 1.68,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 0.4,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 2,\n\t\t\t\tdriver_PWM_AMPL: 230,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.52,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 4,\n\t\t\t\tdriver_PWM_AMPL: 240,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.8,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 3,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.188,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004MAH',\n\t\ttitle: 'LDO-42STH48-2004MAH',\n\t\tmaxPeakCurrent: 2.0,\n\t\tfullStepsPerRotation: 400,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004AC',\n\t\ttitle: 'LDO-42STH48-2004AC',\n\t\tmaxPeakCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1404MAC',\n\t\ttitle: 'LDO-42STH25-1404MAC',\n\t\tmaxPeakCurrent: 1.4,\n\t\tfullStepsPerRotation: 400,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.85,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 2,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 1.0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 3,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1004CL200E',\n\t\ttitle: 'LDO-42STH25-1004CL200E',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-36STH20-1004AHG',\n\t\ttitle: 'LDO-36STH20-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.707,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_HEND: 6,\n\t\t\t\tdriver_HSTRT: 7,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tvoltage: 24,\n\t\t\t// \tdriver: 'TMC2209',\n\t\t\t// \tsense_resistor: 0.11,\n\t\t\t// \trun_current: 0.85,\n\t\t\t// \tdriver_TBL: 0,\n\t\t\t// \tdriver_HEND: 6,\n\t\t\t// \tdriver_HSTRT: 7,\n\t\t\t// \tdriver_TOFF: 4,\n\t\t\t// },\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-36STH17-1004AHG',\n\t\ttitle: 'LDO-36STH17-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-35STH48-1684AH',\n\t\ttitle: 'LDO-35STH48-1684AH',\n\t\tmaxPeakCurrent: 1.68,\n\t},\n] satisfies z.input<typeof Stepper>[]);\n","import { serializeToolheadConfiguration } from '@/utils/serialization';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { getDefaultNozzle } from '@/data/nozzles';\nimport deepEqual from 'deep-equal';\nimport { KlipperAccelSensorName } from '@/zods/hardware';\n\nexport type ToolheadSuffix = `t${ToolNumber}`;\nexport type ToolheadCommand = `T${ToolNumber}`;\nexport type ToolboardAxisString = 'x' | 'dc';\nexport type ToolboardShortName = ToolheadSuffix;\n\nexport class ToolheadHelper<IsToolboard extends boolean> {\n\tprotected config: ToolheadConfiguration<IsToolboard>;\n\tconstructor(toolhead: ToolheadConfiguration<IsToolboard>) {\n\t\tthis.config = toolhead;\n\t}\n\tpublic hasToolboard(): boolean {\n\t\treturn this.config.toolboard != null;\n\t}\n\tpublic getToolboard() {\n\t\treturn this.config.toolboard;\n\t}\n\tpublic getMotionStepperName() {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 'dual_carriage';\n\t\t}\n\t\treturn `stepper_${this.getMotionAxis()}`;\n\t}\n\tpublic getToolboardName(): `toolboard_${ToolboardShortName}` {\n\t\tif (this.config.toolboard == null) {\n\t\t\tthrow new Error(`Toolhead T${this.getTool()} does not have a toolboard`);\n\t\t}\n\t\treturn `toolboard_${this.getShortToolName()}`;\n\t}\n\tpublic getShortToolName(): ToolboardShortName {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getDescription(): string {\n\t\treturn this.config.description ?? `the printer's toolhead`;\n\t}\n\tpublic getMotionAxis(): PrinterAxis.x | PrinterAxis.dual_carriage {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.dual_carriage;\n\t\t}\n\t\treturn PrinterAxis.x;\n\t}\n\tpublic getExtruderAxis(): PrinterAxis.extruder | PrinterAxis.extruder1 {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.extruder1;\n\t\t}\n\t\treturn PrinterAxis.extruder;\n\t}\n\tpublic getToolCommand(): ToolheadCommand {\n\t\treturn `T${this.getTool()}`;\n\t}\n\tpublic getTool(): ToolNumber {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tpublic getSerialSuffix(): ToolheadSuffix {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getExtruder() {\n\t\treturn this.config.extruder;\n\t}\n\tpublic getHotend() {\n\t\treturn this.config.hotend;\n\t}\n\tpublic getNozzle() {\n\t\treturn this.config.nozzle ?? getDefaultNozzle();\n\t}\n\tpublic getThermistor() {\n\t\treturn this.config.thermistor;\n\t}\n\tpublic getXEndstop() {\n\t\treturn this.config.xEndstop;\n\t}\n\tpublic getYEndstop() {\n\t\treturn this.config.yEndstop;\n\t}\n\tpublic getXAccelerometer() {\n\t\treturn this.config.xAccelerometer;\n\t}\n\tpublic getYAccelerometer() {\n\t\treturn this.config.yAccelerometer;\n\t}\n\tpublic getXAccelerometerName(): KlipperAccelSensorName | null {\n\t\tswitch (this.getXAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tcase 'beacon':\n\t\t\t\treturn 'beacon';\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\tpublic getYAccelerometerName(): KlipperAccelSensorName | null {\n\t\tswitch (this.getYAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tcase 'beacon':\n\t\t\t\treturn 'beacon';\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\tpublic getChangeSet(changes: PartialToolheadConfiguration) {\n\t\tif (changes == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst changeSet: any = {};\n\t\tObject.keys(changes).forEach((key) => {\n\t\t\tconst current = this.getConfig()[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tconst change = changes[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tif ((current != null && change == null) || (current == null && change != null)) {\n\t\t\t\tchangeSet[key] = change;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (current && change) {\n\t\t\t\tif (typeof current === 'object' && 'id' in current && typeof change === 'object' && 'id' in change) {\n\t\t\t\t\tif (current.id !== change.id) {\n\t\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t\t}\n\t\t\t\t} else if (!deepEqual(current, change)) {\n\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst parsed = PartialToolheadConfiguration.safeParse(changeSet);\n\t\treturn parsed;\n\t}\n\tpublic getProbe() {\n\t\treturn this.config.probe;\n\t}\n\tpublic getPartFan() {\n\t\treturn this.config.partFan;\n\t}\n\tpublic getHotendFan() {\n\t\treturn this.config.hotendFan;\n\t}\n\tpublic serialize(): SerializedToolheadConfiguration {\n\t\treturn serializeToolheadConfiguration(this.config);\n\t}\n\tpublic getConfig(): ToolheadConfiguration<IsToolboard> {\n\t\treturn { ...this.config };\n\t}\n}\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function setDisplayName(Component: React.ComponentType<any>, name: string | undefined) {\n\t(Component as any).displayName = name;\n}\n","'use client';\n\nimport { atom, selector, useRecoilValue, useRecoilState, waitForAll, noWait } from 'recoil';\nimport { z } from 'zod';\nimport { Fan } from '@/zods/hardware';\nimport {\n\tPartialPrinterConfiguration,\n\tPrinterConfiguration,\n\tSerializedPartialPrinterConfiguration,\n\tSerializedPrinterConfiguration,\n} from '@/zods/printer-configuration';\nimport { syncEffect } from 'recoil-sync';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { useMemo } from 'react';\nimport {\n\tserializePartialToolheadConfiguration,\n\tserializePrinterRail,\n\tserializeToolheadConfiguration,\n} from '@/utils/serialization';\nimport {\n\tControlboardState,\n\tLoadablePrinterRailsState,\n\tPrinterRailsState,\n\tPrinterSizeState,\n\tPrinterState,\n} from '@/recoil/printer';\nimport { PrinterToolheadsState } from '@/recoil/toolhead';\nimport { defaultControllerFan } from '@/data/fans';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { getLogger } from '@/app/_helpers/logger';\n\nexport const PerformanceModeState = atom<boolean | null | undefined>({\n\tkey: 'PerformanceMode',\n\tdefault: false,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(z.boolean().optional().nullable()),\n\t\t}),\n\t],\n});\n\nexport const StealthchopState = atom<boolean | null | undefined>({\n\tkey: 'Stealchop',\n\tdefault: false,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(z.boolean().optional().nullable()),\n\t\t}),\n\t],\n});\n\nexport const StandstillStealthState = atom<boolean | null | undefined>({\n\tkey: 'StandstillStealth',\n\tdefault: false,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(z.boolean().optional().nullable()),\n\t\t}),\n\t],\n});\nexport const ControllerFanState = atom<z.infer<typeof Fan> | null>({\n\tkey: 'ControllerFan',\n\tdefault: defaultControllerFan,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(Fan.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterConfigurationState = selector<z.infer<typeof PartialPrinterConfiguration> | null>({\n\tkey: 'PrinterConfiguration',\n\tget: async ({ get }) => {\n\t\tconst {\n\t\t\tprinter,\n\t\t\tprinterSize,\n\t\t\tperformanceMode,\n\t\t\tstealthchop,\n\t\t\tstandstillStealth,\n\t\t\trails,\n\t\t\tcontrolboard,\n\t\t\tcontrollerFan,\n\t\t\ttoolheads,\n\t\t} = get(\n\t\t\twaitForAll({\n\t\t\t\tprinter: PrinterState,\n\t\t\t\tprinterSize: PrinterSizeState,\n\t\t\t\tperformanceMode: PerformanceModeState,\n\t\t\t\tstealthchop: StealthchopState,\n\t\t\t\tstandstillStealth: StandstillStealthState,\n\t\t\t\trails: PrinterRailsState,\n\t\t\t\tcontrolboard: ControlboardState,\n\t\t\t\tcontrollerFan: ControllerFanState,\n\t\t\t\ttoolheads: PrinterToolheadsState,\n\t\t\t}),\n\t\t);\n\n\t\tconst input = {\n\t\t\tprinter:\n\t\t\t\tprinter == null\n\t\t\t\t\t? null\n\t\t\t\t\t: {\n\t\t\t\t\t\t\t...printer,\n\t\t\t\t\t\t\tdefaults: {\n\t\t\t\t\t\t\t\t...printer.defaults,\n\t\t\t\t\t\t\t\ttoolheads: printer?.defaults.toolheads.map((th) => serializeToolheadConfiguration(th)),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\tsize: printerSize,\n\t\t\tperformanceMode,\n\t\t\tstealthchop,\n\t\t\tstandstillStealth,\n\t\t\trails,\n\t\t\tcontrolboard,\n\t\t\tcontrollerFan,\n\t\t\ttoolheads: toolheads.length > 0 ? toolheads : undefined,\n\t\t} satisfies {\n\t\t\t[key in keyof PrinterConfiguration]: NonNullable<PartialPrinterConfiguration>[key] | null | undefined;\n\t\t};\n\n\t\tconst printerConfig = PartialPrinterConfiguration.safeParse(input);\n\t\tif (printerConfig.success === false) {\n\t\t\tgetLogger().error(\n\t\t\t\t{ errors: printerConfig.error.flatten().fieldErrors, data: input },\n\t\t\t\t\"Couldn't parse printer configuration\",\n\t\t\t);\n\t\t}\n\t\treturn printerConfig.success ? printerConfig.data : null;\n\t},\n});\n\nexport const LoadablePrinterConfigurationState = selector<z.infer<typeof PartialPrinterConfiguration>>({\n\tkey: 'LoadablePrinterConfigurationState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterConfigurationState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => null,\n\t\t\tloading: () => null,\n\t\t}[loadable.state]();\n\t},\n});\n\nexport const serializePrinterConfiguration = (config: PrinterConfiguration): SerializedPrinterConfiguration => {\n\tconst serializedConfig: SerializedPrinterConfiguration = {\n\t\tprinter: config.printer.id,\n\t\ttoolheads: config.toolheads.map((toolhead) => serializeToolheadConfiguration(toolhead)),\n\t\tsize: config.size,\n\t\tcontrolboard: config.controlboard.id,\n\t\tcontrollerFan: config.controllerFan.id,\n\t\tperformanceMode: config.performanceMode,\n\t\tstealthchop: config.stealthchop,\n\t\tstandstillStealth: config.standstillStealth,\n\t\trails: config.rails.map((rail) => serializePrinterRail(rail)),\n\t};\n\treturn SerializedPrinterConfiguration.parse(serializedConfig);\n};\nexport const serializePartialPrinterConfiguration = (\n\tconfig: PartialPrinterConfiguration,\n): SerializedPartialPrinterConfiguration => {\n\tconst toolheads = config?.toolheads?.map((toolhead) => serializePartialToolheadConfiguration(toolhead));\n\tconst serializedConfig: SerializedPartialPrinterConfiguration = {\n\t\tprinter: config?.printer?.id,\n\t\ttoolheads: toolheads,\n\t\tsize: config?.size,\n\t\tcontrolboard: config?.controlboard?.id,\n\t\tcontrollerFan: config?.controllerFan?.id,\n\t\tperformanceMode: config?.performanceMode,\n\t\tstealthchop: config?.stealthchop,\n\t\tstandstillStealth: config?.standstillStealth,\n\t};\n\treturn SerializedPartialPrinterConfiguration.parse(serializedConfig);\n};\n\nexport const useSerializedPrinterConfiguration = () => {\n\tconst printerConfiguration = useRecoilValue(PrinterConfigurationState);\n\tconst serializedPrinterConfiguration = useMemo(\n\t\t() => serializePartialPrinterConfiguration(printerConfiguration ?? {}),\n\t\t[printerConfiguration],\n\t);\n\treturn serializedPrinterConfiguration;\n};\nexport const usePrinterConfiguration = () => {\n\tconst [selectedPrinter, setSelectedPrinter] = useRecoilState(PrinterState);\n\tconst [selectedPrinterOption, setSelectedPrinterOption] = useRecoilState(PrinterSizeState);\n\tconst [selectedBoard, setSelectedBoard] = useRecoilState(ControlboardState);\n\tconst [performanceMode, setPerformanceMode] = useRecoilState(PerformanceModeState);\n\tconst [stealthchop, setStealthchop] = useRecoilState(StealthchopState);\n\tconst [standstillStealth, setStandstillStealth] = useRecoilState(StandstillStealthState);\n\tconst [selectedControllerFan, setSelectedControllerFan] = useRecoilState(ControllerFanState);\n\tconst selectedPrinterRails = useRecoilValue(PrinterRailsState);\n\tconst printerConfiguration = useRecoilValue(PrinterConfigurationState);\n\tconst serializedPrinterConfiguration = useSerializedPrinterConfiguration();\n\tconst parsedPrinterConfiguration = PrinterConfiguration.safeParse(printerConfiguration);\n\n\treturn {\n\t\tselectedPrinter,\n\t\tsetSelectedPrinter,\n\t\tselectedPrinterOption,\n\t\tsetSelectedPrinterOption,\n\t\tselectedBoard,\n\t\tsetSelectedBoard,\n\t\tperformanceMode,\n\t\tsetPerformanceMode,\n\t\tstealthchop,\n\t\tsetStealthchop,\n\t\tstandstillStealth,\n\t\tsetStandstillStealth,\n\t\tselectedPrinterRails,\n\t\tselectedControllerFan,\n\t\tsetSelectedControllerFan,\n\t\tpartialPrinterConfiguration: printerConfiguration,\n\t\tserializedPrinterConfiguration,\n\t\tparsedPrinterConfiguration,\n\t};\n};\n","import { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { PrinterDefinitionWithResolvedToolheads } from '@/zods/printer';\nimport { trpcClient } from '@/helpers/trpc';\nimport { atomFamily, selector, DefaultValue, atom, noWait } from 'recoil';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { deserializePrinterRail, serializePrinterRail } from '@/utils/serialization';\nimport { SerializedPrinterRail, PrinterAxis, PrinterRail } from '@/zods/motion';\nimport { Board, BoardID, BoardPath } from '@/zods/boards';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { PrinterSize } from '@/zods/printer-configuration';\n\nlet cachedPrinters: { [id: string]: z.infer<typeof PrinterDefinitionWithResolvedToolheads> } = {};\n\n// SyncEffect read methods\nexport const readPrinterAtom = async ({\n\tread,\n}: ReadAtomInterface): Promise<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null> => {\n\tconst printer = await read(PrinterState.key);\n\tif (printer != null) {\n\t\tlet printerId = z.object({ id: PrinterDefinitionWithResolvedToolheads.shape.id }).safeParse(printer);\n\t\tif (!printerId.success) {\n\t\t\tprinterId = z.object({ id: PrinterDefinitionWithResolvedToolheads.shape.id }).safeParse({ id: printer });\n\t\t}\n\t\tif (printerId.success) {\n\t\t\tlet newPrinter: null | PrinterDefinitionWithResolvedToolheads = cachedPrinters[printerId.data.id];\n\t\t\tif (newPrinter == null) {\n\t\t\t\tnewPrinter = await trpcClient.printer.printer.query(printerId.data.id, {});\n\t\t\t\tif (newPrinter) {\n\t\t\t\t\tcachedPrinters[printerId.data.id] = newPrinter;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newPrinter ?? null;\n\t\t}\n\t}\n\treturn null;\n};\n\nexport const readPrinterRailAtom =\n\t(param: PrinterAxis) =>\n\tasync ({ read }: ReadAtomInterface): Promise<z.infer<typeof SerializedPrinterRail> | null> => {\n\t\tconst printerRailState = await read(PrinterRailState(param).key);\n\t\tif (printerRailState != null) {\n\t\t\tconst parsedRail = SerializedPrinterRail.safeParse(printerRailState);\n\t\t\tif (parsedRail.success) {\n\t\t\t\treturn parsedRail.data;\n\t\t\t}\n\t\t\tconst printer = await readPrinterAtom({ read });\n\t\t\tconst printerRailDefault = printer?.defaults.rails.find((r) => r.axis === param);\n\t\t\tif (printerRailDefault != null) {\n\t\t\t\tconst parsedRailRepaired = SerializedPrinterRail.safeParse({ ...printerRailDefault, ...printerRailState });\n\t\t\t\tif (parsedRailRepaired.success) {\n\t\t\t\t\treturn parsedRailRepaired.data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\nexport const PrinterState = atom<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'Printer',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterAtom,\n\t\t\twrite: async ({ write }, newValue) => {\n\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\tif (newValue instanceof DefaultValue) {\n\t\t\t\t\t\twrite(PrinterState.key, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twrite(PrinterState.key, newValue ?? null);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(() => {}, 500);\n\t\t\t\t});\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterDefinitionWithResolvedToolheads.nullable()),\n\t\t}),\n\t],\n});\n\nexport const LoadablePrinterState = selector<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'LoadablePrinterState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n\nexport const PrinterSizeState = atom<z.output<typeof PrinterSize> | null>({\n\tkey: 'PrinterOption',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterSize.nullable()),\n\t\t}),\n\t],\n});\n\nexport const ControlboardState = atom<Board | null>({\n\tkey: 'Controlboard',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({ read }) => {\n\t\t\t\tconst board = await read(ControlboardState.key);\n\t\t\t\tif (board != null) {\n\t\t\t\t\tconst boardId = z.object({ id: BoardID }).safeParse(board);\n\t\t\t\t\tif (boardId.success) {\n\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: false } });\n\t\t\t\t\t\tconst newBoard = boardReq.find((b) => b.id === boardId.data.id);\n\t\t\t\t\t\treturn newBoard ?? null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(Board.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailState = atomFamily<z.infer<typeof SerializedPrinterRail> | null, PrinterAxis>({\n\tkey: 'PrinterRail',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterRailAtom(param),\n\t\t\trefine: getRefineCheckerForZodSchema(SerializedPrinterRail.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'PrinterRails',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tconst rails = printer?.defaults.rails.map((rail) => {\n\t\t\tconst railState = get(PrinterRailState(rail.axis));\n\t\t\treturn deserializePrinterRail(railState ?? rail);\n\t\t});\n\t\treturn rails ?? [];\n\t},\n\tset: ({ set }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tObject.values(PrinterAxis).forEach((axis) => {\n\t\t\t\tset(PrinterRailState(axis), null);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tnewValue.forEach((rail) => {\n\t\t\tset(PrinterRailState(rail.axis), serializePrinterRail(rail));\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'LoadablePrinterRailsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterRailsState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import { atomFamily, DefaultValue, selector, selectorFamily, noWait, waitForAll } from 'recoil';\nimport { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { trpcClient } from '@/helpers/trpc';\nimport { BoardID, BoardPath, Toolboard } from '@/zods/boards';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tBaseToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { PrinterState } from '@/recoil/printer';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { getLogger } from '@/app/_helpers/logger';\n\nexport const isAxisValidForTool = (axis: PrinterAxis, tool: ToolNumber) => {\n\tif (axis === PrinterAxis.dual_carriage && tool === 1) {\n\t\treturn true;\n\t}\n\tif (axis === PrinterAxis.x) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const PrinterToolheadState = atomFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\tToolNumber\n>({\n\tkey: 'PrinterToolhead',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({\n\t\t\t\tread,\n\t\t\t}: ReadAtomInterface): Promise<(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null> => {\n\t\t\t\tconst state = await read(PrinterToolheadState(param).key);\n\t\t\t\tif (typeof state !== 'object') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (state == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst { toolNumber: tNum, ...printerToolheadState } = state as ToolheadConfiguration<any> & {\n\t\t\t\t\ttoolNumber: ToolNumber;\n\t\t\t\t};\n\t\t\t\tif (printerToolheadState != null) {\n\t\t\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(printerToolheadState);\n\t\t\t\t\tif (parsedToolhead.success) {\n\t\t\t\t\t\tlet freshToolboard = parsedToolhead.data.toolboard;\n\t\t\t\t\t\tif (freshToolboard) {\n\t\t\t\t\t\t\tif (freshToolboard != null) {\n\t\t\t\t\t\t\t\tconst toolboardPath = z.object({ id: BoardID }).safeParse(freshToolboard);\n\t\t\t\t\t\t\t\tif (toolboardPath.success) {\n\t\t\t\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: true } });\n\t\t\t\t\t\t\t\t\tconst maybeToolboard = boardReq.find((b) => b.id === toolboardPath.data.id);\n\t\t\t\t\t\t\t\t\tif (maybeToolboard) {\n\t\t\t\t\t\t\t\t\t\tfreshToolboard = Toolboard.parse(maybeToolboard);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...parsedToolhead.data, toolboard: freshToolboard, toolNumber: param };\n\t\t\t\t\t}\n\t\t\t\t\tgetLogger().debug(\n\t\t\t\t\t\t'RecoilSync: failed to read toolhead!',\n\t\t\t\t\t\tPrinterToolheadState(param).key,\n\t\t\t\t\t\tparsedToolhead.error,\n\t\t\t\t\t\tprinterToolheadState,\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(BaseToolheadConfiguration.extend({ toolNumber: ToolNumber }).nullable()),\n\t\t}),\n\t],\n});\n\nexport const DeserializeToolheadQuery = selectorFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\t{ th: SerializedToolheadConfiguration; boardId: string; toolNumber: ToolNumber }\n>({\n\tkey: 'DeserializeToolheadQuery',\n\tget:\n\t\t(param) =>\n\t\tasync ({ get }) => {\n\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(\n\t\t\t\tawait trpcClient.printer.deserializeToolheadConfiguration.query({\n\t\t\t\t\tconfig: param.th,\n\t\t\t\t\tprinterConfig: { controlboard: param.boardId },\n\t\t\t\t}),\n\t\t\t);\n\t\t\tif (!parsedToolhead.success) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { ...parsedToolhead.data, toolNumber: param.toolNumber };\n\t\t},\n});\n\nexport const PrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'PrinterToolheadsState',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tif (printer == null) {\n\t\t\treturn [];\n\t\t}\n\t\treturn get(waitForAll(printer.defaults.toolheads.map((th, i) => PrinterToolheadState(i as ToolNumber)))).filter(\n\t\t\tBoolean,\n\t\t);\n\t},\n\tset: ({ set, reset }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tthrow new Error('ToolheadsState cannot be reset, please reset the individual ToolheadState instead');\n\t\t}\n\t\tnewValue.forEach((th) => {\n\t\t\tset(PrinterToolheadState(th.toolNumber), { ...th, toolNumber: th.toolNumber });\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'LoadablePrinterToolheadsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterToolheadsState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import type { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport {\n\tBasePrinterRail,\n\tDriver,\n\tPrinterRail,\n\tPrinterRailDefinition,\n\tSerializedPrinterRail,\n\tSerializedPrinterRailDefinition,\n\tStepper,\n\tPrinterAxis,\n\tDriverID,\n} from '@/zods/motion';\nimport { Steppers } from '@/data/steppers';\nimport {\n\tToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tToolOrAxis,\n} from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport { ToolheadHelper, ToolheadSuffix } from '@/helpers/toolhead';\nimport {\n\tAccelerometer,\n\tAccelerometerType,\n\tKlipperAccelSensorName,\n\tKlipperAccelSensorSchema,\n\tklipperAccelSensorSchema,\n} from '@/zods/hardware';\nimport { Board, Toolboard } from '@/zods/boards';\n\nexport const deserializeDriver = (driverId: z.input<typeof DriverID>): z.infer<typeof Driver> | null => {\n\treturn Drivers.find((d) => d.id === driverId) ?? null;\n};\n\nexport const deserializeStepper = (stepperId: z.input<typeof Stepper.shape.id>): z.infer<typeof Stepper> | null => {\n\treturn Steppers.find((d) => d.id === stepperId) ?? null;\n};\n\nexport const deserializePrinterRail = (rail: z.input<typeof SerializedPrinterRail>): z.infer<typeof PrinterRail> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn BasePrinterRail.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const deserializePrinterRailDefinition = (\n\trail: z.input<typeof SerializedPrinterRailDefinition>,\n): z.infer<typeof PrinterRailDefinition> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn PrinterRailDefinition.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const stringToTitleObject = <Item extends string>(data: Item): { id: Item; title: Item } => {\n\treturn { id: data, title: data };\n};\n\nexport const serializePrinterRail = (rail: z.input<typeof PrinterRail>): z.infer<typeof SerializedPrinterRail> => {\n\treturn SerializedPrinterRail.parse({\n\t\t...rail,\n\t\tdriver: rail.driver.id,\n\t\tstepper: rail.stepper.id,\n\t});\n};\n\nexport const serializeToolheadConfiguration = (th: ToolheadConfiguration<any>): SerializedToolheadConfiguration => {\n\treturn {\n\t\t...th,\n\t\ttoolboard: th.toolboard?.id,\n\t\thotend: th.hotend.id,\n\t\tthermistor: th.thermistor,\n\t\textruder: th.extruder.id,\n\t\tprobe: th.probe?.id,\n\t\txEndstop: th.xEndstop.id,\n\t\tyEndstop: th.yEndstop.id,\n\t\tpartFan: th.partFan.id,\n\t\thotendFan: th.hotendFan.id,\n\t\txAccelerometer: th.xAccelerometer?.id,\n\t\tyAccelerometer: th.yAccelerometer?.id,\n\t};\n};\n\nexport const serializePartialToolheadConfiguration = (\n\tth: PartialToolheadConfiguration,\n): SerializedPartialToolheadConfiguration => {\n\treturn th == null\n\t\t? undefined\n\t\t: {\n\t\t\t\t...th,\n\t\t\t\ttoolboard: th.toolboard?.id,\n\t\t\t\thotend: th.hotend?.id,\n\t\t\t\tthermistor: th.thermistor,\n\t\t\t\textruder: th.extruder?.id,\n\t\t\t\tprobe: th.probe?.id,\n\t\t\t\txEndstop: th.xEndstop?.id,\n\t\t\t\tyEndstop: th.yEndstop?.id,\n\t\t\t\tpartFan: th.partFan?.id,\n\t\t\t\thotendFan: th.hotendFan?.id,\n\t\t\t\txAccelerometer: th.xAccelerometer?.id,\n\t\t\t\tyAccelerometer: th.yAccelerometer?.id,\n\t\t\t};\n};\n\nexport const extractToolheadsFromPrinterConfiguration = (config: PartialPrinterConfiguration) => {\n\tconst toolheads = config?.toolheads\n\t\t?.map((th) => {\n\t\t\tif (th == null) {\n\t\t\t\tthrow new Error('Toolhead can not be null');\n\t\t\t}\n\t\t\treturn new ToolheadHelper(ToolheadConfiguration.parse(th));\n\t\t})\n\t\t.filter(Boolean);\n\tif (toolheads == null) {\n\t\tthrow new Error('No toolheads found');\n\t}\n\treturn toolheads;\n};\n\nexport const extractToolheadFromPrinterConfiguration = (\n\ttoolOrAxis: ToolOrAxis | PrinterAxis,\n\tconfig: PartialPrinterConfiguration,\n) => {\n\tif (config?.toolheads == null || config.toolheads.length === 0) {\n\t\tthrow new Error('No toolheads preset in supplied printer config');\n\t}\n\tconst toolheads = extractToolheadsFromPrinterConfiguration(config);\n\tconst th =\n\t\ttypeof toolOrAxis === 'number'\n\t\t\t? toolheads.find((th) => th.getTool() === toolOrAxis)\n\t\t\t: toolheads.find((th) => th.getExtruderAxis() === toolOrAxis || th.getMotionAxis() === toolOrAxis);\n\treturn th;\n};\n\nexport const getAccelerometerWithType = (\n\taccelerometer: z.infer<typeof Accelerometer>,\n\ttoolheadSuffix: ToolheadSuffix | null,\n\ttoolboard?: Toolboard | null,\n\tcontrolboard?: Board | null,\n): KlipperAccelSensorSchema | null => {\n\tlet accelType: z.infer<typeof AccelerometerType> = 'adxl345';\n\tif (accelerometer.id === 'toolboard') {\n\t\tif (toolboard == null) {\n\t\t\tthrow new Error('Toolboard not found in supplied printer config');\n\t\t}\n\t\tif (toolboard.ADXL345SPI != null) {\n\t\t\taccelType = 'adxl345';\n\t\t}\n\t\tif (toolboard.LIS2DW != null) {\n\t\t\taccelType = 'lis2dw';\n\t\t}\n\t} else if (accelerometer.id === 'controlboard') {\n\t\tif (controlboard == null) {\n\t\t\tthrow new Error('Controlboard needed to determine accelerometer type');\n\t\t}\n\t\tif (controlboard.ADXL345SPI != null) {\n\t\t\taccelType = 'adxl345';\n\t\t}\n\t\tif (controlboard.LIS2DW != null) {\n\t\t\taccelType = 'lis2dw';\n\t\t}\n\t} else if (accelerometer.id === 'beacon') {\n\t\taccelType = 'beacon';\n\t} else if (accelerometer.id === 'sbc') {\n\t\taccelType = 'adxl345';\n\t}\n\tif (accelerometer.id === 'none') {\n\t\treturn null;\n\t}\n\treturn klipperAccelSensorSchema.parse({\n\t\tname: accelerometerIdToKlipperAccelSensorName(accelerometer, toolheadSuffix, toolboard, controlboard),\n\t\ttype: accelType,\n\t});\n};\n\nexport const accelerometerIdToKlipperAccelSensorName = (\n\taccelerometer: z.infer<typeof Accelerometer>,\n\ttoolheadSuffix: ToolheadSuffix | null,\n\ttoolboard?: Toolboard | null,\n\tcontrolboard?: Board | null,\n): KlipperAccelSensorName => {\n\tif (accelerometer.id === 'toolboard') {\n\t\tif (toolboard == null) {\n\t\t\tthrow new Error('Toolboard not found in supplied printer config');\n\t\t}\n\t\treturn toolheadSuffix === 't0' ? 'toolboard_t0' : 'toolboard_t1';\n\t}\n\tif (accelerometer.id === 'controlboard') {\n\t\tif (controlboard == null) {\n\t\t\tthrow new Error('Controlboard not found in supplied printer config');\n\t\t}\n\t\treturn 'controlboard';\n\t}\n\tif (accelerometer.id === 'beacon') {\n\t\treturn 'beacon';\n\t}\n\tif (accelerometer.id === 'sbc') {\n\t\treturn 'rpi';\n\t}\n\tthrow new Error('Cannot translate accelerometer id to Klipper accel sensor name');\n};\n","import { z } from 'zod';\nimport { DriverID, PrinterAxis, Voltage } from '@/zods/motion';\n\n// Complete map of all available RatOS pin aliases.\nexport const AllPins = {\n\tx_step_pin: z.string().optional(),\n\tx_dir_pin: z.string().optional(),\n\tx_enable_pin: z.string().optional(),\n\tx_uart_pin: z.string().optional(),\n\tx_diag_pin: z.string().optional(),\n\tx_endstop_pin: z.string().optional(),\n\tx1_step_pin: z.string().optional(),\n\tx1_dir_pin: z.string().optional(),\n\tx1_enable_pin: z.string().optional(),\n\tx1_uart_pin: z.string().optional(),\n\tx1_diag_pin: z.string().optional(),\n\tx1_endstop_pin: z.string().optional(),\n\tdual_carriage_step_pin: z.string().optional(),\n\tdual_carriage_dir_pin: z.string().optional(),\n\tdual_carriage_enable_pin: z.string().optional(),\n\tdual_carriage_uart_pin: z.string().optional(),\n\tdual_carriage_diag_pin: z.string().optional(),\n\tdual_carriage_endstop_pin: z.string().optional(),\n\ty_step_pin: z.string().optional(),\n\ty_dir_pin: z.string().optional(),\n\ty_enable_pin: z.string().optional(),\n\ty_uart_pin: z.string().optional(),\n\ty_diag_pin: z.string().optional(),\n\ty_endstop_pin: z.string().optional(),\n\ty1_step_pin: z.string().optional(),\n\ty1_dir_pin: z.string().optional(),\n\ty1_enable_pin: z.string().optional(),\n\ty1_uart_pin: z.string().optional(),\n\ty1_diag_pin: z.string().optional(),\n\ty1_endstop_pin: z.string().optional(),\n\ty2_step_pin: z.string().optional(),\n\ty2_dir_pin: z.string().optional(),\n\ty2_enable_pin: z.string().optional(),\n\ty2_uart_pin: z.string().optional(),\n\ty2_diag_pin: z.string().optional(),\n\ty2_endstop_pin: z.string().optional(),\n\tz0_step_pin: z.string().optional(),\n\tz0_dir_pin: z.string().optional(),\n\tz0_enable_pin: z.string().optional(),\n\tz0_uart_pin: z.string().optional(),\n\tz0_diag_pin: z.string().optional(),\n\tz1_step_pin: z.string().optional(),\n\tz1_dir_pin: z.string().optional(),\n\tz1_enable_pin: z.string().optional(),\n\tz1_uart_pin: z.string().optional(),\n\tz1_diag_pin: z.string().optional(),\n\tz2_step_pin: z.string().optional(),\n\tz2_dir_pin: z.string().optional(),\n\tz2_enable_pin: z.string().optional(),\n\tz2_uart_pin: z.string().optional(),\n\tz2_diag_pin: z.string().optional(),\n\tz3_step_pin: z.string().optional(),\n\tz3_dir_pin: z.string().optional(),\n\tz3_enable_pin: z.string().optional(),\n\tz3_uart_pin: z.string().optional(),\n\tz3_diag_pin: z.string().optional(),\n\te_step_pin: z.string().optional(),\n\te_dir_pin: z.string().optional(),\n\te_enable_pin: z.string().optional(),\n\te_uart_pin: z.string().optional(),\n\te_diag_pin: z.string().optional(),\n\te_heater_pin: z.string().optional(),\n\te_sensor_pin: z.string().optional(),\n\tstepper_spi_mosi_pin: z.string().optional(),\n\tstepper_spi_miso_pin: z.string().optional(),\n\tstepper_spi_sclk_pin: z.string().optional(),\n\tadxl345_cs_pin: z.string().optional(),\n\tbltouch_sensor_pin: z.string().optional(),\n\tbltouch_control_pin: z.string().optional(),\n\tprobe_pin: z.string().optional(),\n\tfan_part_cooling_pin: z.string().optional(),\n\tfan_toolhead_cooling_pin: z.string().optional(),\n\tfan_controller_board_pin: z.string().optional(),\n\theater_bed_heating_pin: z.string().optional(),\n\theater_bed_sensor_pin: z.string().optional(),\n\t'4p_fan_part_cooling_pin': z.string().optional(),\n\t'4p_fan_part_cooling_tach_pin': z.string().optional(),\n\t'4p_toolhead_cooling_pin': z.string().optional(),\n\t'4p_toolhead_cooling_tach_pin': z.string().optional(),\n\t'4p_controller_board_pin': z.string().optional(),\n\t'4p_controller_board_tach_pin': z.string().optional(),\n};\nexport const PinMap = z.object(AllPins);\n\nexport enum AxisPinPrefix {\n\tx = 'x',\n\tx1 = 'x1',\n\ty = 'y',\n\ty1 = 'y1',\n\ty2 = 'y2',\n\tz0 = 'z0',\n\tz1 = 'z1',\n\tz2 = 'z2',\n\tz3 = 'z3',\n\te = 'e',\n\te1 = 'e1',\n\tdual_carriage = 'dual_carriage',\n}\n\nexport const pinAliasPrefixToPrinterAxis: { [key in AxisPinPrefix]: PrinterAxis } = {\n\tx: PrinterAxis['x'],\n\tx1: PrinterAxis['x1'],\n\ty: PrinterAxis['y'],\n\ty1: PrinterAxis['y1'],\n\ty2: PrinterAxis['y2'],\n\tz0: PrinterAxis['z'],\n\tz1: PrinterAxis['z1'],\n\tz2: PrinterAxis['z2'],\n\tz3: PrinterAxis['z3'],\n\te: PrinterAxis['extruder'],\n\te1: PrinterAxis['extruder1'],\n\tdual_carriage: PrinterAxis['dual_carriage'],\n};\n\nexport const pinPrefixToAxis = z.nativeEnum(AxisPinPrefix).transform((v) => pinAliasPrefixToPrinterAxis[v] ?? null);\nexport const axisToPinPrefix = z\n\t.nativeEnum(PrinterAxis)\n\t.transform(\n\t\t(pa) =>\n\t\t\t(Object.keys(pinAliasPrefixToPrinterAxis) as AxisPinPrefix[]).find(\n\t\t\t\t(p) => pinAliasPrefixToPrinterAxis[p] === pa,\n\t\t\t) ?? null,\n\t);\n\nexport const ControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const ExtruderlessControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\tz1_step_pin: z.string(),\n\tz1_dir_pin: z.string(),\n\tz1_enable_pin: z.string(),\n\tz1_uart_pin: z.string(),\n\tz2_step_pin: z.string(),\n\tz2_dir_pin: z.string(),\n\tz2_enable_pin: z.string(),\n\tz2_uart_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\nexport const ToolboardPinMap = PinMap.extend({\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tadxl345_cs_pin: z.string(),\n\tprobe_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const UARTPins = z.object({\n\tuart_pin: z.string(),\n\tuart_address: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n});\n\nexport const SPIPins = z\n\t.object({\n\t\tcs_pin: z.string(),\n\t})\n\t.and(\n\t\tz.object({ spi_bus: z.string() }).or(\n\t\t\tz.object({\n\t\t\t\tspi_software_mosi_pin: z.string().optional(),\n\t\t\t\tspi_software_miso_pin: z.string().optional(),\n\t\t\t\tspi_software_sclk_pin: z.string().optional(),\n\t\t\t}),\n\t\t),\n\t);\n\nexport const hasSPI = (slot: unknown) => {\n\treturn SPIPins.safeParse(slot).success;\n};\n\nexport const hasUART = (slot: unknown) => {\n\treturn UARTPins.safeParse(slot).success;\n};\n\nexport const MotorSlotPins = z.object({\n\tstep_pin: z.string(),\n\tdir_pin: z.string(),\n\tenable_pin: z.string(),\n\tdiag_pin: z.string().optional(),\n\tendstop_pin: z.string().optional(),\n\t// UART\n\tuart_pin: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n\t// SPI\n\tcs_pin: z.string().optional(),\n});\n\nexport const MotorSlot = MotorSlotPins.extend({\n\ttitle: z.string(),\n\t// UART\n\tuart_address: z.string().optional(),\n\t// SPI\n\tspi_bus: z.string().optional(),\n\tspi_software_mosi_pin: z.string().optional(),\n\tspi_software_miso_pin: z.string().optional(),\n\tspi_software_sclk_pin: z.string().optional(),\n}).refine(\n\t(slot) => {\n\t\treturn hasSPI(slot) || hasUART(slot);\n\t},\n\t{ message: 'Motor slot must have either SPI or UART pins' },\n);\n\nexport type MotorSlot = z.output<typeof MotorSlot>;\n\nconst AnySlotPin = MotorSlot.innerType().omit({ title: true }).partial();\nexport type AnySlotPin = z.infer<typeof AnySlotPin>;\n\nexport const MotorSlotKey = z.string();\n\nexport const reversePinLookup: (pins: AnySlotPin, board: Board) => z.infer<typeof MotorSlotKey> | undefined = (\n\tpins,\n\tboard,\n) => {\n\tconst slots = Object.entries(board.motorSlots ?? {});\n\tfor (const [key, slot] of slots) {\n\t\tif (Object.entries(pins).every(([pin, value]) => slot[pin as keyof typeof slot] === value)) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const BoardID = z.string().brand('BoardID');\nexport const BoardPath = z.string().brand('BoardPath');\nexport const BoardSerialPath = z.string().brand('BoardSerialPath');\n\nconst integratedDrivers = z.record(z.nativeEnum(PrinterAxis).or(z.string()), DriverID);\nconst motorSlots = z.record(MotorSlotKey, MotorSlot);\n\nexport const Board = z\n\t.object({\n\t\tid: BoardID,\n\t\tisToolboard: z.boolean().optional(),\n\t\tisHost: z.boolean().optional(),\n\t\tserialPath: BoardSerialPath.optional(),\n\t\tboardImageFileName: z.string().optional(),\n\t\tmanualFileName: z.string().optional(),\n\t\twireDiagramFileName: z.string().optional(),\n\t\tname: z.string(),\n\t\tmanufacturer: z.string(),\n\t\tfirmwareBinaryName: z.string(),\n\t\tcompileScript: z.string(),\n\t\tflashScript: z.string().optional(),\n\t\tflashInstructions: z.string().optional(),\n\t\tdisableAutoFlash: z.boolean().optional(),\n\t\tdocumentationLink: z.string().optional(),\n\t\thasQuirksFiles: z.boolean().optional(),\n\t\tdriverCount: z.number(),\n\t\tintegratedDrivers: integratedDrivers.optional(),\n\t\textruderlessConfig: z.string().optional(),\n\t\tfourPinFanConnectorCount: z.number().optional(),\n\t\tdriverVoltages: Voltage.array().default([24]),\n\t\thasMcuTempSensor: z.boolean().default(true),\n\t\tthermistorPullup: z.number().default(4700),\n\t\talternativePT1000Resistor: z.number().optional(),\n\t\tinvertPinLogic: z.array(z.string()).default([]),\n\t\tcustomSections: z\n\t\t\t.record(\n\t\t\t\tz.string().regex(/^\\S+$/),\n\t\t\t\tz.object({\n\t\t\t\t\tname: z.string().optional(),\n\t\t\t\t\tparameters: z.record(z.string().regex(/^\\S+$/), z.string().or(z.number()).or(z.boolean())),\n\t\t\t\t\tcomments: z.array(z.string()).default([]),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tmotorSlots: z.record(MotorSlotKey, MotorSlot).optional(),\n\t\toutputPins: z\n\t\t\t.array(\n\t\t\t\tz.object({\n\t\t\t\t\tpin: z.string(),\n\t\t\t\t\tname: z.string(),\n\t\t\t\t\tvalue: z.number().min(0).max(1),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tdfu: z\n\t\t\t.object({\n\t\t\t\tdfuBootImage: z.string(),\n\t\t\t\tflashDevice: z.string(),\n\t\t\t\tinstructions: z.array(z.string()),\n\t\t\t\treminder: z.string().optional(),\n\t\t\t\thasBoot0Jumper: z.boolean(),\n\t\t\t})\n\t\t\t.optional(),\n\t\tstepperSPI: z\n\t\t\t.object({\n\t\t\t\tsoftware: z.object({\n\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\tmiso: z.string(),\n\t\t\t\t}),\n\t\t\t})\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tADXL345SPI: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tLIS2DW: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tpath: BoardPath,\n\t})\n\t.and(\n\t\tz\n\t\t\t.object({ isToolboard: z.literal(true), motorSlots: z.undefined() })\n\t\t\t.or(z.object({ motorSlots: motorSlots }))\n\t\t\t.or(z.object({ isHost: z.literal(true), motorSlots: z.undefined() })),\n\t);\n\nexport const BoardWithDetectionStatus = Board.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport const AutoFlashableBoard = z.object({\n\tid: z.string(),\n\tdisableAutoFlash: z.literal(false).optional(),\n\tisToolboard: z.boolean().optional(),\n\tcompileScript: z.string(),\n\tflashScript: z.string(),\n\tpath: BoardPath,\n});\n\nexport const Toolboard = Board.and(\n\tz.object({\n\t\tisToolboard: z.literal(true),\n\t\tisHost: z.literal(false).optional(),\n\t\tintegratedDrivers: integratedDrivers.and(\n\t\t\tz.object({\n\t\t\t\t[PrinterAxis.extruder]: z.string(),\n\t\t\t}),\n\t\t),\n\t}),\n);\n\nexport const ToolboardWithDetectionStatus = Toolboard.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport type Board = z.infer<typeof Board>;\nexport type BoardWithDetectionStatus = z.infer<typeof BoardWithDetectionStatus>;\nexport type Toolboard = z.infer<typeof Toolboard>;\nexport type ToolboardWithDetectionStatus = z.infer<typeof ToolboardWithDetectionStatus>;\nexport type AutoFlashableBoard = z.infer<typeof AutoFlashableBoard>;\nexport type ToolboardPinMap = z.infer<typeof ToolboardPinMap>;\nexport type ControlBoardPinMap = z.infer<typeof ControlBoardPinMap>;\nexport type ExtruderlessControlBoardPinMap = z.infer<typeof ExtruderlessControlBoardPinMap>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport { PrinterRailDefinition, Stepper } from '@/zods/motion';\nimport { badgeColorOptions } from '@/components/common/badge';\n\nexport const thermistors = [\n\t'EPCOS 100K B57560G104F',\n\t'ATC Semitec 104GT-2',\n\t'ATC Semitec 104NT-4-R025H42G',\n\t'Generic 3950',\n\t'Honeywell 100K 135-104LAG-J01',\n\t'NTC 100K MGB18-104F39050L32',\n\t'SliceEngineering 450',\n\t'TDK NTCG104LH104JT1',\n\t'PT1000',\n] as const;\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = environment.RATOS_CONFIGURATION_PATH;\n}\nconst hardwareType = z.object({\n\tpath: z.string().startsWith(startsWithServerValidation).endsWith('.cfg'),\n\tid: z.string(),\n});\n\nexport const Thermistor = z.enum(thermistors);\n\nexport const Hotend = hardwareType.extend({\n\ttype: z.literal('hotend'),\n\ttitle: z.string(),\n\tthermistor: z.enum(thermistors),\n\tflowType: z.union([z.literal('sf'), z.literal('hf'), z.literal('uhf')]),\n});\n\nexport const Nozzle = z.object({\n\ttype: z.enum(['Regular', 'CHT']),\n\tdiameter: z.number().min(0.2).max(1.8),\n});\n\nexport const Extruder = hardwareType.extend({\n\ttype: z.literal('extruder'),\n\tstepper: Stepper.shape.id.optional(),\n\tcurrent: PrinterRailDefinition.shape.current.optional(),\n\ttitle: z.string(),\n});\n\nexport const Probe = hardwareType.extend({\n\ttype: z.literal('static-probe').or(z.literal('stowable-probe')),\n\ttitle: z.string(),\n});\n\nexport const Endstop = z.object({\n\tid: z.enum(['endstop', 'endstop-toolboard', 'sensorless']),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n\nexport const KlipperAccelSensorNameSchame = z.union([\n\tz.literal('toolboard_t0'),\n\tz.literal('toolboard_t1'),\n\tz.literal('controlboard'),\n\tz.literal('rpi'),\n\tz.literal('beacon'),\n]);\n\nexport const AccelerometerType = z.union([z.literal('adxl345'), z.literal('lis2dw'), z.literal('beacon')]);\n\nexport const Accelerometer = z.object({\n\tid: z.enum(['toolboard', 'controlboard', 'sbc', 'none', 'beacon']),\n\ttitle: z.string(),\n\taccelerometerType: AccelerometerType.default('adxl345').optional(),\n});\n\nexport type KlipperAccelSensorName = z.infer<typeof KlipperAccelSensorNameSchame>;\n\nexport const klipperAccelSensorSchema = z.object({\n\tname: KlipperAccelSensorNameSchame,\n\ttype: AccelerometerType,\n});\n\nexport type KlipperAccelSensorSchema = z.infer<typeof klipperAccelSensorSchema>;\n\nexport const AccelerometerWithType = Accelerometer.extend({\n\taccelerometerType: AccelerometerType,\n});\n\nexport type AccelerometerWithType = z.infer<typeof AccelerometerWithType>;\n\nexport const Fan = z.object({\n\tid: z.enum([\n\t\t'2pin',\n\t\t'4pin',\n\t\t'4pin-dedicated',\n\t\t'2pin-toolboard',\n\t\t'4pin-toolboard',\n\t\t'4pin-dedicated-toolboard',\n\t\t'none',\n\t]),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n","import * as z from 'zod';\nimport type { Board, Toolboard } from '@/zods/boards';\nexport enum StepperVoltage {\n\t'24V' = 24,\n\t'36V' = 36,\n\t'48V' = 48,\n\t'56V' = 56,\n\t'60V' = 60,\n}\n\nexport const Voltages: { id: StepperVoltage; title: string }[] = [\n\t{ id: StepperVoltage['24V'], title: '24V' },\n\t{ id: StepperVoltage['36V'], title: '36V' },\n\t{ id: StepperVoltage['48V'], title: '48V' },\n\t{ id: StepperVoltage['56V'], title: '56V' },\n\t{ id: StepperVoltage['60V'], title: '60V' },\n];\n\nexport const getSupportedVoltages = (\n\tboard: Board | Toolboard | null,\n\tdriver?: z.infer<typeof Driver>,\n): typeof Voltages => {\n\tif (driver?.external) {\n\t\treturn Voltages.filter((v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V']);\n\t}\n\treturn Voltages.filter((v) => board?.driverVoltages?.includes(v.id) || v.id === StepperVoltage['24V']).filter(\n\t\t(v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V'],\n\t);\n};\n\nexport const matchesDefaultRail = (\n\trail: Zod.infer<typeof BasePrinterRail>,\n\tdefaultRail: Zod.infer<typeof PrinterRailDefinition>,\n\tperformanceMode: boolean,\n) => {\n\treturn (\n\t\trail.axis === defaultRail.axis &&\n\t\trail.driver.id === defaultRail.driver.id &&\n\t\trail.stepper.id === defaultRail.stepper.id &&\n\t\t((performanceMode &&\n\t\t\tdefaultRail.performanceMode &&\n\t\t\trail.voltage === defaultRail.performanceMode?.voltage &&\n\t\t\trail.current === defaultRail.performanceMode?.current) ||\n\t\t\t(!performanceMode && rail.voltage === defaultRail.voltage && rail.current === defaultRail.current))\n\t);\n};\n\nexport const Voltage = z.nativeEnum(StepperVoltage);\n\nexport const DriverID = z.string();\n\nexport const Driver = z\n\t.object({\n\t\tid: DriverID,\n\t\ttitle: z.string(),\n\t\tprotocol: z.enum(['SPI', 'UART']),\n\t\tcoolingCurrentThreshold: z.number(),\n\t\tvoltages: Voltage.array(),\n\t\tmaxCurrent: z.number().min(0),\n\t\texternal: z.boolean().optional(),\n\t})\n\t.and(\n\t\tz\n\t\t\t.object({\n\t\t\t\ttype: z.enum(['TMC2209', 'TMC2226', 'TMC5160', 'TMC2130']),\n\t\t\t\tsenseResistor: z.number().min(0),\n\t\t\t})\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\ttype: z.enum(['TMC2240']),\n\t\t\t\t}),\n\t\t\t),\n\t);\n\nconst BaseStepperPreset = z.object({\n\tvoltage: Voltage,\n\trun_current: z.number(),\n\tdriver: DriverID,\n});\n\nconst BaseSPIStepperPreset = BaseStepperPreset.extend({\n\tdriver_MSLUT0: z.number().optional(),\n\tdriver_MSLUT1: z.number().optional(),\n\tdriver_MSLUT2: z.number().optional(),\n\tdriver_MSLUT3: z.number().optional(),\n\tdriver_MSLUT4: z.number().optional(),\n\tdriver_MSLUT5: z.number().optional(),\n\tdriver_MSLUT6: z.number().optional(),\n\tdriver_MSLUT7: z.number().optional(),\n\tdriver_W0: z.number().optional(),\n\tdriver_W1: z.number().optional(),\n\tdriver_W2: z.number().optional(),\n\tdriver_W3: z.number().optional(),\n\tdriver_X1: z.number().optional(),\n\tdriver_X2: z.number().optional(),\n\tdriver_X3: z.number().optional(),\n\tdriver_START_SIN: z.number().optional(),\n\tdriver_START_SIN90: z.number().optional(),\n\tdriver_IHOLDDELAY: z.number().optional(),\n\tdriver_TPOWERDOWN: z.number().optional(),\n\tdriver_TBL: z.number().optional(),\n\tdriver_TOFF: z.number().optional(),\n\tdriver_HEND: z.number().optional(),\n\tdriver_HSTRT: z.number().optional(),\n\tdriver_PWM_AUTOSCALE: z.boolean().optional(),\n\tdriver_PWM_FREQ: z.number().optional(),\n\tdriver_PWM_GRAD: z.number().optional(),\n\tdriver_PWM_AMPL: z.number().optional(),\n\tdriver_SGT: z.number().optional(),\n});\n\nexport const Stepper = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\tfullStepsPerRotation: z.number().default(200),\n\tmaxPeakCurrent: z.number().min(0),\n\tpresets: z\n\t\t.array(\n\t\t\tz.discriminatedUnion('driver', [\n\t\t\t\tBaseSPIStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2130', 'TMC5160']),\n\t\t\t\t\tsense_resistor: z.number(),\n\t\t\t\t}),\n\t\t\t\tBaseSPIStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2240']),\n\t\t\t\t}),\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2209']),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t\tsense_resistor: z.number(),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t\t.optional()\n\t\t.describe('Stepper presets are tightly coupled to the driver type, sense_resistor, stepper, voltage and current.'),\n});\n\nexport enum PrinterAxis {\n\t'x' = 'x',\n\t'dual_carriage' = 'dual_carriage',\n\t'x1' = 'x1',\n\t'y' = 'y',\n\t'y1' = 'y1',\n\t'y2' = 'y2',\n\t'z' = 'z',\n\t'z1' = 'z1',\n\t'z2' = 'z2',\n\t'z3' = 'z3',\n\t'extruder' = 'extruder',\n\t'extruder1' = 'extruder1',\n}\n\nexport const BasePrinterRail = z.object({\n\taxis: z.nativeEnum(PrinterAxis).describe('Axis of the rail'),\n\taxisDescription: z.string().optional().describe('Description of the axis'),\n\tdriver: Driver.describe('Stepper driver used on this axis'),\n\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver'),\n\tstepper: Stepper.describe('Stepper motor connected to this axis'),\n\tinvertStepperDirection: z.boolean().default(false).describe('Invert the default direction of the stepper motor'),\n\taxisMinimum: z.number().optional().describe('Minimum position of the axis in mm'),\n\taxisMaximum: z.number().optional().describe('Maximum position of the axis in mm'),\n\taxisEndstop: z.number().optional().describe('Endstop position of the axis in mm'),\n\tmotorSlot: z.string().optional().describe('Optional board motor slot of the stepper driver'),\n\tcurrent: z.number().min(0),\n\trotationDistance: z.number().min(0).describe('Distance in mm the axis travels per stepper rotation'),\n\tgearRatio: z\n\t\t.string()\n\t\t.regex(/^\\d+:\\d+$/)\n\t\t.optional()\n\t\t.describe('Optional gear ratio of the axis'),\n\thomingSpeed: z.number().min(0).default(10).describe('Axis speed during homing in mm/s'),\n\tmicrostepping: z\n\t\t.number()\n\t\t.min(16)\n\t\t.max(256)\n\t\t.default(64)\n\t\t.describe(\n\t\t\t'Microstepping of the stepper driver, higher values increase resolution and lower noise but increases load on the MCU',\n\t\t),\n});\n\nexport const PrinterRailDefinition = BasePrinterRail.extend({\n\tmotorSlot: z.undefined(),\n\tperformanceMode: z\n\t\t.object({\n\t\t\tcurrent: z.number().min(0),\n\t\t\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver in performance mode'),\n\t\t\thomingSpeed: z.number().min(0).optional().describe('Axis speed during homing in mm/s in performance mode'),\n\t\t})\n\t\t.optional(),\n});\n\nexport const SerializedPrinterRailDefinition = PrinterRailDefinition.extend({\n\tdriver: DriverID,\n\tstepper: Stepper.shape.id,\n});\n\nexport const PrinterRail = BasePrinterRail\n\t// Don't enforce this, warn about temperatures in the frontend instead.\n\t// .refine(\n\t// \t(data) => data.current <= data.stepper.maxPeakCurrent / 1.41,\n\t// \t'Current must be less than max peak current of the stepper divided by 1.41',\n\t// )\n\t.refine((data) => data.current <= data.driver.maxCurrent, 'Current must be less than max current of the driver');\n\nexport const SerializedPrinterRail = BasePrinterRail.extend({\n\tdriver: DriverID,\n\tstepper: Stepper.shape.id,\n});\n\nexport const Limits = z.object({\n\tmin: z.number(),\n\tmax: z.number(),\n\tendstop: z.number(),\n});\nexport type Limits = z.infer<typeof Limits>;\n","import { Board, BoardID } from '@/zods/boards';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterDefinition, PrinterSizeDefinition } from '@/zods/printer';\nimport { PrinterAxis, PrinterRail, SerializedPrinterRail } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n} from '@/zods/toolhead';\nimport { ToolheadHelper } from '@/helpers/toolhead';\nimport { z } from 'zod';\n\nexport const PrinterSize = z.union([PrinterSizeDefinition, z.number(), z.string()]).nullable().optional();\n\nconst BasePrinterConfiguration = z\n\t.object({\n\t\tprinter: PrinterDefinition,\n\t\tcontrolboard: Board,\n\t\ttoolheads: z.array(ToolheadConfiguration).min(1).max(2),\n\t\tsize: PrinterSize,\n\t\tcontrollerFan: Fan,\n\t\tperformanceMode: z.boolean().default(false),\n\t\tstealthchop: z.boolean().default(false),\n\t\tstandstillStealth: z.boolean().default(false),\n\t\trails: z.array(PrinterRail),\n\t})\n\t.strict()\n\t.transform((data, ctx) => {\n\t\tif (data.size == null) {\n\t\t\tdata.size = data.printer.sizes[Object.keys(data.printer.sizes)[0]];\n\t\t} else if (typeof data.size === 'number' || typeof data.size === 'string') {\n\t\t\tconst size = data.printer.sizes[data.size.toString()];\n\t\t\tif (size == null) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Size ${data.size} is not a valid size for a ${data.printer.name} config`,\n\t\t\t\t});\n\t\t\t\treturn z.NEVER;\n\t\t\t}\n\t\t\tdata.size = size;\n\t\t}\n\t\treturn data as Omit<typeof data, 'size'> & { size: z.output<typeof PrinterSizeDefinition> };\n\t});\n\nexport const PrinterConfiguration = BasePrinterConfiguration.superRefine((arg, ctx) => {\n\t// Driver count validation\n\tconst toolboardCount = arg.toolheads.map((t) => t.toolboard).filter(Boolean).length;\n\tif (toolboardCount + arg.controlboard.driverCount < arg.printer.driverCountRequired) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.too_small,\n\t\t\tmessage: `Your combination of controlboard and toolboards do not have enough stepper drivers for a ${arg.printer.name} config`,\n\t\t\tminimum: arg.printer.driverCountRequired,\n\t\t\tinclusive: true,\n\t\t\ttype: 'number',\n\t\t});\n\t}\n}).superRefine((arg, ctx) => {\n\t// Rail motor slot validation\n\tconst toolheads = arg.toolheads.map((t) => new ToolheadHelper(t));\n\tconst errors = arg.rails\n\t\t.map((r, i) => {\n\t\t\tconst toolhead = toolheads.find((th) => th.getExtruderAxis() === r.axis);\n\t\t\tif (r.motorSlot != null) {\n\t\t\t\tconst conflicts = arg.rails.filter((pr) => {\n\t\t\t\t\tconst conflictingToolhead = toolheads.find((th) => th.getExtruderAxis() === pr.axis);\n\t\t\t\t\tif (pr.axis === r.axis || toolhead?.hasToolboard() != null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (conflictingToolhead?.hasToolboard != null) {\n\t\t\t\t\t\t// The rail is an extruder rail and the toolhead has a toolboard, no chance of conflict.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn pr.motorSlot === r.motorSlot;\n\t\t\t\t});\n\t\t\t\tconst railName = (axis: PrinterAxis) =>\n\t\t\t\t\taxis === 'extruder'\n\t\t\t\t\t\t? 'Extruder T0'\n\t\t\t\t\t\t: axis === PrinterAxis.extruder1\n\t\t\t\t\t\t\t? 'Extruder T1'\n\t\t\t\t\t\t\t: 'Stepper ' + axis.toLocaleUpperCase();\n\t\t\t\tif (conflicts.length === 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${railName(conflicts[0].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t} else if (conflicts.length > 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${conflicts\n\t\t\t\t\t\t\t.slice(0, -1)\n\t\t\t\t\t\t\t.map((cr) => railName(cr.axis))\n\t\t\t\t\t\t\t.join(', ')} and ${railName(conflicts[conflicts.length - 1].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn conflicts.length > 0 ? { rail: r, conflicts } : 0;\n\t\t\t}\n\t\t\treturn null;\n\t\t})\n\t\t.filter(Boolean);\n\tif (errors.length > 0) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\tmessage: 'Motor slot conflicts detected',\n\t\t});\n\t}\n});\n\nexport const SerializedPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\tprinter: PrinterDefinition.shape.id,\n\t\tcontrolboard: BoardID,\n\t\ttoolheads: z.array(SerializedToolheadConfiguration).min(1).max(2),\n\t\tcontrollerFan: Fan.shape.id,\n\t\trails: z.array(SerializedPrinterRail),\n\t})\n\t.strict();\n\nexport const PartialPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\ttoolheads: z.array(PartialToolheadConfiguration).min(1).max(2),\n\t})\n\t.strict()\n\t.partial()\n\t.optional();\n\nexport const SerializedPartialPrinterConfiguration = SerializedPrinterConfiguration.extend({\n\ttoolheads: z.array(SerializedPartialToolheadConfiguration).min(1).max(2),\n})\n\t.strict()\n\t.partial();\n\nexport type PrinterConfiguration = z.infer<typeof PrinterConfiguration>;\nexport type PartialPrinterConfiguration = z.infer<typeof PartialPrinterConfiguration>;\nexport type SerializedPrinterConfiguration = z.infer<typeof SerializedPrinterConfiguration>;\nexport type SerializedPartialPrinterConfiguration = z.infer<typeof SerializedPartialPrinterConfiguration>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport path from 'path';\nimport { SerializedPrinterRailDefinition } from '@/zods/motion';\nimport { SerializedToolheadConfiguration, ToolheadConfiguration } from '@/zods/toolhead';\nimport { Fan } from '@/zods/hardware';\nimport { BoardID } from '@/zods/boards';\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = path.join(environment.RATOS_CONFIGURATION_PATH, 'printers');\n}\n\nconst SpeedLimits = z\n\t.object({\n\t\tvelocity: z.number().min(0).describe('Maximum velocity for this printer'),\n\t\taccel: z.number().min(0).describe('Maximum acceleration for this printer'),\n\t\tz_velocity: z.number().min(0).describe('Maximum z velocity for this printer'),\n\t\tz_accel: z.number().min(0).describe('Maximum z acceleration for this printer'),\n\t\tsquare_corner_velocity: z.number().min(0).default(5).describe('Maximum square corner velocity for this printer'),\n\t\ttravel_velocity: z.number().min(0).default(200).describe('Maximum travel velocity for this printer'),\n\t\ttravel_accel: z.number().min(0).default(3000).describe('Maximum travel velocity for this printer'),\n\t})\n\t.strict();\n\nexport const PrinterSizeDefinition = z\n\t.object({\n\t\tx: z.number().min(0).describe('The print volume in X'),\n\t\ty: z.number().min(0).describe('The print volume in Y'),\n\t\tz: z.number().min(0).describe('The print volume in Z'),\n\t})\n\t.describe('The print volume of a printer');\n\nexport const PrinterDefinition = z\n\t.object({\n\t\tid: z.string().transform((data) => {\n\t\t\treturn data === 'caramba-chonk'\n\t\t\t\t? 'v-chonk'\n\t\t\t\t: data.startsWith('caramba-')\n\t\t\t\t\t? data.replace('caramba-', 'v-core-4-')\n\t\t\t\t\t: data;\n\t\t}),\n\t\tname: z.string().describe('The name of the printer'),\n\t\treleaseDate: z.string().optional().describe('The release date of the printer in ISO 8601/RFC3339 eg. 2023-12-31'),\n\t\tdescription: z.string().describe('A description of the printer'),\n\t\tmanufacturer: z.string().describe('The name of the manufacturer of this printer'),\n\t\tdocumentationLink: z.string().describe('Link to the RatOS documentation for this printer'),\n\t\timage: z.string().describe('Link to an image of the printer'),\n\t\tsizes: z.record(z.string(), PrinterSizeDefinition).describe('Size options for this printer'),\n\t\ttemplate: z.string().describe('Printer.cfg template for this printer'),\n\t\tpath: z.string().startsWith(startsWithServerValidation),\n\t\tdriverCountRequired: z.number().describe('Number of drivers required for this printer'),\n\t\tkinematics: z\n\t\t\t.union([z.literal('cartesian'), z.literal('corexy'), z.literal('hybrid-corexy'), z.literal('hybrid-corexy-idex')])\n\t\t\t.optional(),\n\t\tbedMargin: z\n\t\t\t.object({\n\t\t\t\tx: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t\ty: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t})\n\t\t\t.describe('Margin of available movement around the bed for this printer')\n\t\t\t.default({ x: [0, 0], y: [0, 0] }),\n\t\tspeedLimits: z\n\t\t\t.object({\n\t\t\t\tbasic: SpeedLimits,\n\t\t\t\tperformance: SpeedLimits.optional(),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Speed limits for this printer'),\n\t\tdefaults: z\n\t\t\t.object({\n\t\t\t\ttoolheads: z.array(SerializedToolheadConfiguration).describe('Default toolheads for this printer'),\n\t\t\t\tboard: BoardID.describe('Default board for this printer. Should be the name of the board directory.'),\n\t\t\t\trails: z.array(SerializedPrinterRailDefinition).describe('Default rails for this printer'),\n\t\t\t\tcontrollerFan: Fan.shape.id.optional().describe('Default controller fan for this printer'),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Default hardware for this printer'),\n\t})\n\t.describe('A RatOS supported 3d printer');\n\nexport const PrinterDefinitionWithResolvedToolheads = PrinterDefinition.extend({\n\tdefaults: PrinterDefinition.shape.defaults\n\t\t.extend({\n\t\t\ttoolheads: z.array(ToolheadConfiguration),\n\t\t})\n\t\t.strict(),\n});\n\nexport type PrinterDefinition = z.infer<typeof PrinterDefinition>;\nexport type PrinterDefinitionWithResolvedToolheads = z.infer<typeof PrinterDefinitionWithResolvedToolheads>;\n","import { z } from 'zod';\nimport { BoardID, Toolboard } from '@/zods/boards';\nimport { Hotend, Thermistor, Extruder, Probe, Endstop, Fan, Accelerometer, Nozzle } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { getDefaultNozzle } from '@/data/nozzles';\n\nexport const BaseToolheadConfiguration = z\n\t.object({\n\t\thotend: Hotend,\n\t\tthermistor: Thermistor,\n\t\textruder: Extruder,\n\t\txEndstop: Endstop,\n\t\tyEndstop: Endstop,\n\t\thotendFan: Fan,\n\t\tpartFan: Fan,\n\t\tnozzle: Nozzle.default(getDefaultNozzle()),\n\t\txAccelerometer: Accelerometer.optional().nullable(),\n\t\tyAccelerometer: Accelerometer.optional().nullable(),\n\t\ttoolboard: Toolboard.nullable(),\n\t\tprobe: Probe.optional(),\n\t\taxis: z.literal(PrinterAxis.x).or(z.literal(PrinterAxis.dual_carriage)),\n\t\tdescription: z.string().optional(),\n\t\ttoolNumber: z.number().optional(),\n\t})\n\t.strict();\n\nexport const ToolNumber = z.union([z.literal(0), z.literal(1)]);\nexport const ToolAxis = z.union([\n\tz.literal(PrinterAxis.x),\n\tz.literal(PrinterAxis.dual_carriage),\n\tz.literal(PrinterAxis.extruder),\n\tz.literal(PrinterAxis.extruder1),\n]);\nexport const ToolOrAxis = z.union([ToolAxis, ToolNumber]);\nexport type ToolNumber = z.infer<typeof ToolNumber>;\nexport type ToolAxis = z.infer<typeof ToolAxis>;\nexport type ToolOrAxis = z.infer<typeof ToolOrAxis>;\n\nexport const ToolheadConfiguration = BaseToolheadConfiguration.refine(\n\t(data) => data.toolboard !== null || data.xEndstop.id !== 'endstop-toolboard',\n\t'Cannot use toolboard endstop without a toolboard',\n)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.hotendFan.id),\n\t\t'Cannot use toolboard hotend fan without a toolboard',\n\t)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.partFan.id),\n\t\t'Cannot use toolboard part cooling fan without a toolboard',\n\t);\n\nexport const PartialToolheadConfiguration = BaseToolheadConfiguration.partial().optional();\nexport const SerializedToolheadConfiguration = BaseToolheadConfiguration.extend({\n\thotend: Hotend.shape.id,\n\textruder: Extruder.shape.id,\n\tthermistor: Thermistor,\n\txEndstop: Endstop.shape.id,\n\tyEndstop: Endstop.shape.id,\n\thotendFan: Fan.shape.id,\n\tpartFan: Fan.shape.id,\n\txAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\tyAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\ttoolboard: BoardID.optional().nullable(),\n\tprobe: Probe.shape.id.optional().nullable(),\n}).strict();\nexport const SerializedPartialToolheadConfiguration = SerializedToolheadConfiguration.partial().optional();\n\nexport type ToolheadConfiguration<T extends boolean> = z.infer<typeof ToolheadConfiguration> & {\n\ttoolboard: T extends true ? Toolboard : null;\n};\nexport type PartialToolheadConfiguration = z.infer<typeof PartialToolheadConfiguration>;\nexport type SerializedToolheadConfiguration = z.infer<typeof SerializedToolheadConfiguration>;\nexport type SerializedPartialToolheadConfiguration = z.infer<typeof SerializedPartialToolheadConfiguration>;\n","// @ts-check\nimport { z } from 'zod';\n\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */\nexport const serverSchema = z.object({\n\tUSER: z.string().default('pi'),\n\tNODE_ENV: z.enum(['development', 'test', 'production']),\n\tRATOS_CONFIGURATION_PATH: z.string(),\n\tRATOS_SCRIPT_DIR: z.string(),\n\tKLIPPER_CONFIG_PATH: z.string(),\n\tKLIPPER_DIR: z.string(),\n\tKLIPPER_ENV: z.string(),\n\tMOONRAKER_DIR: z.string(),\n\tLOG_FILE: z.string(),\n\tRATOS_DATA_DIR: z.string(),\n});\n\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */\nexport const clientSchema = z.object({\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: z.string().optional(),\n});\n\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */\nexport const clientEnv = {\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME,\n};\n"],"names":["moonrakerSyncEventEmitter","EventTarget","DispatchSaveAtomEvent","itemKey","value","dispatchEvent","CustomEvent","detail","moonrakerWriteEffect","params","onSet","node","key","newValue","SyncWithMoonraker","children","param","moonraker","useMoonraker","read","useCallback","getItem","DefaultValue","saveAtom","event","saveItem","useEffect","addEventListener","removeEventListener","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","RecoilSync","Drivers","z","array","Driver","parse","id","title","type","protocol","senseResistor","coolingCurrentThreshold","voltages","maxCurrent","external","Strong","React","ref","className","props","jsx_runtime","strong","cn","setDisplayName","fanHelp","jsxs","Fragment","p","partFanOptions","config","toolheadConfig","fans","axis","PrinterAxis","x","push","badge","color","controlboard","name","fourPinFanConnectorCount","toolboard","concat","toolNumber","hotendFanOptions","controllerFan","defaultControllerFan","getDefaultNozzle","diameter","findPreset","stepper","driver","voltage","current","performanceMode","presets","slice","sort","a","b","run_current","find","sense_resistor","Steppers","Stepper","maxPeakCurrent","driver_TBL","driver_TOFF","driver_HEND","driver_HSTRT","driver_IHOLDDELAY","driver_TPOWERDOWN","driver_PWM_FREQ","driver_PWM_GRAD","driver_PWM_AMPL","driver_PWM_AUTOSCALE","fullStepsPerRotation","ToolheadHelper","hasToolboard","getToolboard","getMotionStepperName","dual_carriage","getMotionAxis","getToolboardName","getTool","getShortToolName","getDescription","_this_config_description","description","getExtruderAxis","extruder1","extruder","getToolCommand","getSerialSuffix","getExtruder","getHotend","hotend","getNozzle","_this_config_nozzle","nozzle","getThermistor","thermistor","getXEndstop","xEndstop","getYEndstop","yEndstop","getXAccelerometer","xAccelerometer","getYAccelerometer","yAccelerometer","getXAccelerometerName","_this_getXAccelerometer","getYAccelerometerName","_this_getYAccelerometer","getChangeSet","changes","changeSet","Object","keys","forEach","getConfig","change","deepEqual","parsed","PartialToolheadConfiguration","safeParse","getProbe","probe","getPartFan","partFan","getHotendFan","hotendFan","serialize","serializeToolheadConfiguration","constructor","toolhead","_len","arguments","length","inputs","_key","twMerge","clsx","Component","displayName","PerformanceModeState","atom","default","effects","syncEffect","refine","getRefineCheckerForZodSchema","boolean","optional","nullable","StealthchopState","StandstillStealthState","ControllerFanState","Fan","PrinterConfigurationState","selector","get","printer","printerSize","stealthchop","standstillStealth","rails","toolheads","waitForAll","PrinterState","PrinterSizeState","PrinterRailsState","ControlboardState","PrinterToolheadsState","input","defaults","map","th","size","undefined","printerConfig","PartialPrinterConfiguration","success","getLogger","error","errors","flatten","fieldErrors","data","LoadablePrinterConfigurationState","loadable","noWait","hasValue","contents","hasError","loading","state","serializePrinterConfiguration","serializedConfig","serializePrinterRail","rail","SerializedPrinterConfiguration","serializePartialPrinterConfiguration","serializePartialToolheadConfiguration","SerializedPartialPrinterConfiguration","useSerializedPrinterConfiguration","printerConfiguration","useRecoilValue","serializedPrinterConfiguration","useMemo","usePrinterConfiguration","selectedPrinter","setSelectedPrinter","useRecoilState","selectedPrinterOption","setSelectedPrinterOption","selectedBoard","setSelectedBoard","setPerformanceMode","setStealthchop","setStandstillStealth","selectedControllerFan","setSelectedControllerFan","selectedPrinterRails","parsedPrinterConfiguration","PrinterConfiguration","partialPrinterConfiguration","cachedPrinters","readPrinterAtom","printerId","object","PrinterDefinitionWithResolvedToolheads","shape","newPrinter","trpcClient","query","readPrinterRailAtom","param1","printerRailState","PrinterRailState","parsedRail","SerializedPrinterRail","printerRailDefault","r","parsedRailRepaired","write","Promise","setTimeout","LoadablePrinterState","PrinterSize","board","boardId","BoardID","boardReq","mcu","boards","boardFilters","newBoard","Board","atomFamily","railState","deserializePrinterRail","set","values","PrinterToolheadState","tNum","printerToolheadState","parsedToolhead","ToolheadConfiguration","freshToolboard","toolboardPath","maybeToolboard","Toolboard","debug","BaseToolheadConfiguration","extend","ToolNumber","selectorFamily","deserializeToolheadConfiguration","i","filter","Boolean","reset","LoadablePrinterToolheadsState","deserializeDriver","d","driverId","deserializeStepper","stepperId","BasePrinterRail","deserializePrinterRailDefinition","PrinterRailDefinition","stringToTitleObject","AxisPinPrefix","AllPins","x_step_pin","string","x_dir_pin","x_enable_pin","x_uart_pin","x_diag_pin","x_endstop_pin","x1_step_pin","x1_dir_pin","x1_enable_pin","x1_uart_pin","x1_diag_pin","x1_endstop_pin","dual_carriage_step_pin","dual_carriage_dir_pin","dual_carriage_enable_pin","dual_carriage_uart_pin","dual_carriage_diag_pin","dual_carriage_endstop_pin","y_step_pin","y_dir_pin","y_enable_pin","y_uart_pin","y_diag_pin","y_endstop_pin","y1_step_pin","y1_dir_pin","y1_enable_pin","y1_uart_pin","y1_diag_pin","y1_endstop_pin","y2_step_pin","y2_dir_pin","y2_enable_pin","y2_uart_pin","y2_diag_pin","y2_endstop_pin","z0_step_pin","z0_dir_pin","z0_enable_pin","z0_uart_pin","z0_diag_pin","z1_step_pin","z1_dir_pin","z1_enable_pin","z1_uart_pin","z1_diag_pin","z2_step_pin","z2_dir_pin","z2_enable_pin","z2_uart_pin","z2_diag_pin","z3_step_pin","z3_dir_pin","z3_enable_pin","z3_uart_pin","z3_diag_pin","e_step_pin","e_dir_pin","e_enable_pin","e_uart_pin","e_diag_pin","e_heater_pin","e_sensor_pin","stepper_spi_mosi_pin","stepper_spi_miso_pin","stepper_spi_sclk_pin","adxl345_cs_pin","bltouch_sensor_pin","bltouch_control_pin","probe_pin","fan_part_cooling_pin","fan_toolhead_cooling_pin","fan_controller_board_pin","heater_bed_heating_pin","heater_bed_sensor_pin","PinMap","pinAliasPrefixToPrinterAxis","x1","y","y1","y2","z0","z1","z2","z3","e","e1","nativeEnum","transform","v","_Object_keys_find","pa","and","or","UARTPins","uart_pin","uart_address","rx_pin","tx_pin","SPIPins","cs_pin","spi_bus","spi_software_mosi_pin","spi_software_miso_pin","spi_software_sclk_pin","hasSPI","slot","hasUART","MotorSlotPins","step_pin","dir_pin","enable_pin","diag_pin","endstop_pin","MotorSlot","message","innerType","omit","partial","MotorSlotKey","brand","BoardPath","BoardSerialPath","integratedDrivers","record","DriverID","motorSlots","isToolboard","isHost","serialPath","boardImageFileName","manualFileName","wireDiagramFileName","manufacturer","firmwareBinaryName","compileScript","flashScript","flashInstructions","disableAutoFlash","documentationLink","hasQuirksFiles","driverCount","number","extruderlessConfig","driverVoltages","Voltage","hasMcuTempSensor","thermistorPullup","alternativePT1000Resistor","invertPinLogic","customSections","regex","parameters","comments","outputPins","pin","min","max","dfu","dfuBootImage","flashDevice","instructions","reminder","hasBoot0Jumper","stepperSPI","software","sclk","mosi","miso","hardware","bus","ADXL345SPI","LIS2DW","path","literal","detected","thermistors","startsWithServerValidation","process","env","RATOS_CONFIGURATION_PATH","environment","serverSchema","hardwareType","startsWith","endsWith","Thermistor","enum","Hotend","flowType","union","Nozzle","Extruder","Probe","Endstop","badgeColorOptions","KlipperAccelSensorNameSchame","AccelerometerType","Accelerometer","accelerometerType","klipperAccelSensorSchema","StepperVoltage","Voltages","getSupportedVoltages","includes","matchesDefaultRail","defaultRail","BaseStepperPreset","BaseSPIStepperPreset","driver_MSLUT0","driver_MSLUT1","driver_MSLUT2","driver_MSLUT3","driver_MSLUT4","driver_MSLUT5","driver_MSLUT6","driver_MSLUT7","driver_W0","driver_W1","driver_W2","driver_W3","driver_X1","driver_X2","driver_X3","driver_START_SIN","driver_START_SIN90","driver_SGT","describe","axisDescription","invertStepperDirection","axisMinimum","axisMaximum","axisEndstop","motorSlot","rotationDistance","gearRatio","homingSpeed","microstepping","SerializedPrinterRailDefinition","PrinterRail","endstop","PrinterSizeDefinition","BasePrinterConfiguration","PrinterDefinition","strict","ctx","sizes","toString","addIssue","code","ZodIssueCode","custom","NEVER","superRefine","arg","toolboardCount","t","driverCountRequired","too_small","minimum","inclusive","conflicts","conflictingToolhead","pr","railName","toLocaleUpperCase","cr","join","SerializedToolheadConfiguration","SerializedPartialToolheadConfiguration","SpeedLimits","velocity","accel","z_velocity","z_accel","square_corner_velocity","travel_velocity","travel_accel","replace","releaseDate","image","template","kinematics","bedMargin","tuple","speedLimits","basic","performance","ToolAxis","USER","NODE_ENV","RATOS_SCRIPT_DIR","KLIPPER_CONFIG_PATH","KLIPPER_DIR","KLIPPER_ENV","MOONRAKER_DIR","LOG_FILE","RATOS_DATA_DIR","NEXT_PUBLIC_KLIPPER_HOSTNAME"],"sourceRoot":""}